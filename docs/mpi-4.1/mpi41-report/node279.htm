<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-dynamic/dynamic-2-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi4-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi41-report-html.idx -basedef mpi4defs.txt -o mpi41-report.tex mpi-report.tex 
-->
<title>Memory Allocation Info</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node279">12.4.3. Memory Allocation Info</span></h2>
<a href="node278.htm#Node278"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node276.htm#Node276"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node280.htm#Node280"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node276.htm#Node276"> Common Elements of Both Process Models</a>
<b>Next: </b><a href="node280.htm#Node280"> Portable <font face="sans-serif"> MPI</font> Process Startup</a>
<b>Previous: </b><a href="node278.htm#Node278"> Aborting <font face="sans-serif"> MPI</font> Processes</a>
<p>
  
<P> 
Computing systems contain memory with different properties, including differences in  
performance, persistence, access permissions, or access mode.  
These distinct memories are generally allocated using distinct mechanisms and are  
referred to as memory allocation kinds that are named according to the method of allocation.  
The following info keys can be used to request or query the memory allocation  
kinds supported by the <font face="sans-serif"> MPI</font> library and to assert application usage of memory  
allocation kinds with respect to specific <font face="sans-serif"> MPI</font> objects, as shown in Example <a href="node279.htm#Node279">Memory Allocation Info</a>.  
<P> 
<dl> 
 
<dt> 
<b><font face="sans-serif"> </font><tt>"</tt>mpi_memory_alloc_kinds<tt>"</tt></font> (string, default: <font face="sans-serif"> </font><tt>"</tt>mpi,system<tt>"</tt></font>):</b><dd> 
  
A comma separated list of memory allocation kinds.  
When set on the input info object in a call to  
        <font face="sans-serif"> MPI_SESSION_INIT</font>,  
        <font face="sans-serif"> MPI_COMM_SPAWN</font>,  
        or <font face="sans-serif"> MPI_COMM_SPAWN_MULTIPLE</font>,  
or when supplied as an argument to an <font face="sans-serif"> MPI</font> startup mechanism, this info key  
requests support for the specified memory allocation kinds.  
<P> 
  
When returned by <font face="sans-serif"> MPI</font>, this info key indicates the memory allocation kinds  
supported by the <font face="sans-serif"> MPI</font> library on the given session, <font face="sans-serif"> MPI</font> object, or objects  
derived from the World Model.  
This info key does not affect the kind of memory allocated by <font face="sans-serif"> MPI</font>, e.g., in a  
call to <font face="sans-serif"> MPI_ALLOC_MEM</font> or <font face="sans-serif"> MPI_WIN_ALLOCATE</font>.  
A value corresponding to the empty string represents no memory allocation kinds.  
<P> 
 
<dt> 
<b><font face="sans-serif"> </font><tt>"</tt>mpi_assert_memory_alloc_kinds<tt>"</tt></font> (string, not set by default):</b><dd> 
  
A comma separated list of memory allocation kinds that the calling <font face="sans-serif"> MPI</font> process will  
use with the given <font face="sans-serif"> MPI</font> object.  
A value corresponding to the empty string represents no memory allocation kinds.  
<P> 
</dl> 
<br> 
The <font face="sans-serif"> mpi_memory_alloc_kinds</font> info key is used both for requesting  
and querying support for memory allocation kinds from the <font face="sans-serif"> MPI</font> library.  
<P> 
When supplied to <font face="sans-serif"> MPI_SESSION_INIT</font>, this info key requests support  
for memory allocation kinds for all objects that will be derived from the new  
session.  
This info hint can also be supplied through an argument to an <font face="sans-serif"> MPI</font> startup mechanism.  
In the Sessions Model, this behaves as though the <font face="sans-serif"> mpi_memory_alloc_kinds</font>  
info key with the given value was supplied in the info argument in calls to  
<font face="sans-serif"> MPI_SESSION_INIT</font>.  
A value of <font face="sans-serif"> mpi_memory_alloc_kinds</font> supplied in the info argument to  
<font face="sans-serif"> MPI_SESSION_INIT</font> takes precedence over a value supplied as an  
argument to an <font face="sans-serif"> MPI</font> startup mechanism.  
<P> 
In the World Model, an info hint passed to an <font face="sans-serif"> MPI</font> startup mechanism requests support for memory allocation kinds  
for all objects derived from the World Model.  
This info hint can also be supplied to <font face="sans-serif"> MPI_COMM_SPAWN</font> or  
<font face="sans-serif"> MPI_COMM_SPAWN_MULTIPLE</font> in the World Model. This  
requests support for memory allocation kinds  
for all objects derived from the World Model in the spawned <font face="sans-serif"> MPI</font> process or <font face="sans-serif"> MPI</font>  
processes.  
<P> 
When returned by <font face="sans-serif"> MPI_SESSION_GET_INFO</font>, this info key indicates the  
memory allocation kinds supported by the <font face="sans-serif"> MPI</font> library on the given session.  
When returned in <font face="sans-serif"> MPI_INFO_ENV</font>, this info key indicates the  
memory allocation kinds supported by the <font face="sans-serif"> MPI</font> library for all objects derived  
from the World Model.  
<P> 
If <font face="sans-serif"> mpi_memory_alloc_kinds</font> was supplied during session creation,  
then the value of the corresponding key in the info object returned by  
<font face="sans-serif"> MPI_SESSION_GET_INFO</font> must include all requested memory  
allocation kinds that are supported.  
The substrings that indicate support for these memory allocation kinds must be  
identical to those supplied by the user.  
<font face="sans-serif"> MPI</font> may also return additional memory allocation kinds that were not requested by the user.  
The order of the memory allocation kinds returned through this info key is  
undefined.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
<font face="sans-serif"> MPI</font> libraries may have implementation-specific mechanisms (e.g., environment  
variables) that control the supported memory allocation kinds. Allowing  
implementations to return additonal memory allocation kinds provides for  
compatibility with such mechanisms.  
 (<em> End of rationale.</em>) <br> 
The <font face="sans-serif"> mpi_memory_alloc_kinds</font> info key must also be contained in the info  
object returned by <font face="sans-serif"> MPI_COMM_GET_INFO</font>, <font face="sans-serif"> MPI_WIN_GET_INFO</font>,  
and <font face="sans-serif"> MPI_FILE_GET_INFO</font>.  
If the communicator, window, or file is derived from the World Model, the value of this  
info key must be identical to the value of this info key in  
<font face="sans-serif"> MPI_INFO_ENV</font> unless the user has asserted that support for  
memory allocation kinds can be restricted by setting  
<font face="sans-serif"> mpi_assert_memory_alloc_kinds</font> on that communicator, window, or file.  
If the communicator, window, or file is derived from the Sessions Model, the value of this  
info key must be identical to the value of this info key in the info object  
returned by <font face="sans-serif"> MPI_SESSION_GET_INFO</font> for that session unless the user  
has asserted that support for memory allocation kinds can be restricted by  
setting <font face="sans-serif"> mpi_assert_memory_alloc_kinds</font> on that communicator,  
window, or file.  
<P> 
When the user sets the <font face="sans-serif"> mpi_assert_memory_alloc_kinds</font> info key on  
the input info object for communicator creation, including via  
<font face="sans-serif"> MPI_COMM_SPAWN</font> or <font face="sans-serif"> MPI_COMM_SPAWN_MULTIPLE</font>, window  
creation, or file creation the implementation may assume that the memory for  
all communication buffers passed to <font face="sans-serif"> MPI</font> operations performed by the calling  
<font face="sans-serif"> MPI</font> process on the newly created <font face="sans-serif"> MPI</font> object will use only the memory  
allocation kinds listed in the value string.  
If the <font face="sans-serif"> MPI</font> library does not support one or more of the allocation kinds associated  
with the <font face="sans-serif"> mpi_assert_memory_alloc_kinds</font> info key, it will ignore  
this info key.  
When an <font face="sans-serif"> MPI</font> library recognizes this info key, the value returned when  
querying this info key (e.g., through a call to <font face="sans-serif"> MPI_COMM_GET_INFO</font>)  
must be identical to the value supplied by the user.  
It is erroneous to pass a communication buffer with an unsupported memory allocation kind to  
an <font face="sans-serif"> MPI</font> routine.  
<P> 
Memory allocation kind strings are comma separated lists that follow the  
rules specified in Section <a href="node263.htm#Node263">The <font face="sans-serif"> Info</font> Object</a>. Each element in the list is a  
memory allocation kind that is formatted as the name of the kind, followed by  
an optional colon separated list of restrictors. Whitespace is not permitted within  
the list of restrictors.  
For example,  
<font face="sans-serif"> </font><tt>"</tt>kind_a:restrictor_1,kind_b:restrictor_1:restrictor_2,...<tt>"</tt></font>.  
<P> 
Within a memory allocation kind string, a given kind may be listed more than  
once with different restrictors, e.g., <font face="sans-serif"> </font><tt>"</tt>kind_a:restrictor_1,kind_a:restrictor_2<tt>"</tt></font>.  
A given kind may also be listed more than  
once with fewer restrictors, e.g., <font face="sans-serif"> </font><tt>"</tt>kind_a,kind_a:restrictor_1<tt>"</tt></font>.  
A memory allocation kind with no restrictors indicates an unrestricted memory  
allocation kind.  
Each instance of a kind in the memory allocation kind string indicates a  
separate and potentially overlapping memory allocation kind.  
The following memory allocation kinds and restrictors are defined by <font face="sans-serif"> MPI</font>. This list may be extended by  
<font face="sans-serif"> MPI</font> side documents and implementations.  
<P> 
<ul> 
     
<li><font face="sans-serif"> </font><tt>"</tt>system<tt>"</tt></font>: Memory allocated by standard operating system allocators.  
        When support for the <font face="sans-serif"> </font><tt>"</tt>system<tt>"</tt></font> memory allocation kind is requested by the  
        user, it must be provided by the <font face="sans-serif"> MPI</font> library.  
     
<li><font face="sans-serif"> </font><tt>"</tt>mpi<tt>"</tt></font>: Memory allocated by the <font face="sans-serif"> MPI</font> library.  
        When support for the <font face="sans-serif"> </font><tt>"</tt>mpi<tt>"</tt></font> memory allocation kind is requested by the  
        user, it must be provided by the <font face="sans-serif"> MPI</font> library.  
</ul> 
<br> 
Restrictors for the <font face="sans-serif"> </font><tt>"</tt>mpi<tt>"</tt></font> memory allocation kind:  
<ul> 
     
<li><font face="sans-serif"> </font><tt>"</tt>alloc_mem<tt>"</tt></font>: Memory allocated by a call to <font face="sans-serif"> MPI_ALLOC_MEM</font>  
     
<li><font face="sans-serif"> </font><tt>"</tt>win_allocate<tt>"</tt></font>: Memory allocated by a call to <font face="sans-serif"> MPI_WIN_ALLOCATE</font>  
     
<li><font face="sans-serif"> </font><tt>"</tt>win_allocate_shared<tt>"</tt></font>: Memory allocated by a call to <font face="sans-serif"> MPI_WIN_ALLOCATE_SHARED</font>  
</ul> 
<br> 
<br><b> Example</b>  
  
  
mpi_memory_alloc_kinds,mpi_assert_memory_alloc_kindsThis example demonstrates the usage of memory allocation kinds info keys with the Sessions Model.  
It shows how support for additional memory allocation kinds can be requested,  
how supported memory allocation kinds can be queried,  
how to parse the list of supported memory allocation kinds,  
and how to assert that a subset of supported memory allocation kinds are used  
with operations on a specific communicator.  
<P><img width=866 height=1409 src="img349.gif" alt="Image file"><P>
  
<P> 

<P>
<hr>
<a href="node278.htm#Node278"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node276.htm#Node276"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node280.htm#Node280"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node276.htm#Node276"> Common Elements of Both Process Models</a>
<b>Next: </b><a href="node280.htm#Node280"> Portable <font face="sans-serif"> MPI</font> Process Startup</a>
<b>Previous: </b><a href="node278.htm#Node278"> Aborting <font face="sans-serif"> MPI</font> Processes</a>
<p>
<HR>
Return to <A HREF="node601.htm">MPI-4.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-4.1 of November 2, 2023<BR>
HTML Generated on November 19, 2023
</FONT>
</body>
</html>
