<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-coll/coll-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi4-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi41-report-html.idx -basedef mpi4defs.txt -o mpi41-report.tex mpi-report.tex 
-->
<title>Persistent Inclusive Scan</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node170">7.13.11. Persistent Inclusive Scan</span></h2>
<a href="node169.htm#Node169"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node159.htm#Node159"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node171.htm#Node171"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node159.htm#Node159"> Persistent Collective Operations</a>
<b>Next: </b><a href="node171.htm#Node171"> Persistent Exclusive Scan</a>
<b>Previous: </b><a href="node169.htm#Node169"> Persistent Reduce-Scatter</a>
<p>
  
  
<P> 
<TABLE><TR><TD COLSPAN=2>MPI_SCAN_INIT(<span style="white-space:nowrap">sendbuf</span>, <span style="white-space:nowrap">recvbuf</span>, <span style="white-space:nowrap">count</span>, <span style="white-space:nowrap">datatype</span>, <span style="white-space:nowrap">op</span>, <span style="white-space:nowrap">comm</span>, <span style="white-space:nowrap">info</span>, <span style="white-space:nowrap">request</span>)</TD></TR>  
<TR><TD> IN sendbuf</TD><TD>starting address of send buffer (choice)</TD></TR>  
<TR><TD> OUT recvbuf</TD><TD>starting address of receive buffer (choice)</TD></TR>  
<TR><TD> IN count</TD><TD>number of elements in input buffer (non-negative integer)</TD></TR>  
<TR><TD> IN datatype</TD><TD>datatype of elements of input buffer (handle)</TD></TR>  
<TR><TD> IN op</TD><TD>operation (handle)</TD></TR>  
<TR><TD> IN comm</TD><TD>communicator (handle)</TD></TR>  
<TR><TD> IN info</TD><TD>info argument (handle)</TD></TR>  
<TR><TD> OUT request</TD><TD>communication request (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Scan_init(const void *sendbuf, void *recvbuf, int count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request) <br></tt>  
  
  <tt> int MPI_Scan_init_c(const void *sendbuf, void *recvbuf, MPI_Count count, MPI_Datatype datatype, MPI_Op op, MPI_Comm comm, MPI_Info info, MPI_Request *request) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Scan_init(sendbuf, recvbuf, count, datatype, op, comm, info, request, ierror) <br><br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: <span style="white-space:nowrap">sendbuf</span> <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: <span style="white-space:nowrap">recvbuf</span> <br>INTEGER, INTENT(IN) :: <span style="white-space:nowrap">count</span> <br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span> <br>TYPE(MPI_Op), INTENT(IN) :: <span style="white-space:nowrap">op</span> <br>TYPE(MPI_Comm), INTENT(IN) :: <span style="white-space:nowrap">comm</span> <br>TYPE(MPI_Info), INTENT(IN) :: <span style="white-space:nowrap">info</span> <br>TYPE(MPI_Request), INTENT(OUT) :: <span style="white-space:nowrap">request</span> <br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <tt> MPI_Scan_init(sendbuf, recvbuf, count, datatype, op, comm, info, request, ierror) !(_c) <br><br>TYPE(*), DIMENSION(..), INTENT(IN), ASYNCHRONOUS :: <span style="white-space:nowrap">sendbuf</span> <br>TYPE(*), DIMENSION(..), ASYNCHRONOUS :: <span style="white-space:nowrap">recvbuf</span> <br>INTEGER(KIND=MPI_COUNT_KIND), INTENT(IN) :: <span style="white-space:nowrap">count</span> <br>TYPE(MPI_Datatype), INTENT(IN) :: <span style="white-space:nowrap">datatype</span> <br>TYPE(MPI_Op), INTENT(IN) :: <span style="white-space:nowrap">op</span> <br>TYPE(MPI_Comm), INTENT(IN) :: <span style="white-space:nowrap">comm</span> <br>TYPE(MPI_Info), INTENT(IN) :: <span style="white-space:nowrap">info</span> <br>TYPE(MPI_Request), INTENT(OUT) :: <span style="white-space:nowrap">request</span> <br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_SCAN_INIT(SENDBUF, RECVBUF, COUNT, DATATYPE, OP, COMM, INFO, REQUEST, IERROR) <br><br>&lt;type&gt; <span style="white-space:nowrap">SENDBUF(*)</span>, <span style="white-space:nowrap">RECVBUF(*)</span> <br>INTEGER <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">OP</span>, <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">INFO</span>, <span style="white-space:nowrap">REQUEST</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
Creates a persistent collective communication request for the inclusive scan operation.  
<P> 

<P>
<hr>
<a href="node169.htm#Node169"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node159.htm#Node159"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node171.htm#Node171"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node159.htm#Node159"> Persistent Collective Operations</a>
<b>Next: </b><a href="node171.htm#Node171"> Persistent Exclusive Scan</a>
<b>Previous: </b><a href="node169.htm#Node169"> Persistent Reduce-Scatter</a>
<p>
<HR>
Return to <A HREF="node601.htm">MPI-4.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-4.1 of November 2, 2023<BR>
HTML Generated on November 19, 2023
</FONT>
</body>
</html>
