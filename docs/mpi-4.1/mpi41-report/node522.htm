<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-appLang/appLang-Const-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi4-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi41-report-html.idx -basedef mpi4defs.txt -o mpi41-report.tex mpi-report.tex 
-->
<title>Prototype Definitions</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node522">21.1.3. Prototype Definitions</span></h2>
<a href="node521.htm#Node521"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node519.htm#Node519"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node522.htm#Node523"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node519.htm#Node519"> Defined Values and Handless</a>
<b>Next: </b><a href="node522.htm#Node523"> C Bindings</a>
<b>Previous: </b><a href="node521.htm#Node521"> Types</a>
<p>
  
  
  
<ul> 
</ul> 

<P>
<hr>
<a href="node521.htm#Node521"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node519.htm#Node519"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node522.htm#Node523"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node519.htm#Node519"> Defined Values and Handless</a>
<b>Next: </b><a href="node522.htm#Node523"> C Bindings</a>
<b>Previous: </b><a href="node521.htm#Node521"> Types</a>
<p>
<hr><h3><span id="Node523">21.1.3.1. C Bindings</span></h3>
<a href="node522.htm#Node522"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node522.htm#Node522"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node522.htm#Node524"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<b>Next: </b><a href="node522.htm#Node524"> Fortran 2008 Bindings with the <tt>mpi_f08</tt> Module</a>
<b>Previous: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<p>
  
The following are defined C typedefs for user-defined functions,   
also included in the file <tt>mpi.h</tt>.  
<P> 
<br> 
<pre><tt>/* prototypes for user-defined functions */ 
</tt></pre> 
 <tt> typedef void MPI_User_function(void *invec, void *inoutvec, int *len, MPI_Datatype *datatype); <br></tt>  
 <tt> typedef void MPI_User_function_c(void *invec, void *inoutvec, MPI_Count *len, MPI_Datatype *datatype); <br></tt>  
<P> 
 <tt> typedef int MPI_Comm_copy_attr_function(MPI_Comm oldcomm, int comm_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag); <br></tt>  
 <tt> typedef int MPI_Comm_delete_attr_function(MPI_Comm comm, int comm_keyval, void *attribute_val, void *extra_state); <br></tt>  
<P> 
 <tt> typedef int MPI_Win_copy_attr_function(MPI_Win oldwin, int win_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag); <br></tt>  
 <tt> typedef int MPI_Win_delete_attr_function(MPI_Win win, int win_keyval, void *attribute_val, void *extra_state); <br></tt>  
<P> 
 <tt> typedef int MPI_Type_copy_attr_function(MPI_Datatype oldtype, int type_keyval, void *extra_state, void *attribute_val_in, void *attribute_val_out, int *flag); <br></tt>  
 <tt> typedef int MPI_Type_delete_attr_function(MPI_Datatype datatype, int type_keyval, void *attribute_val, void *extra_state); <br></tt>  
<P> 
 <tt> typedef void MPI_Comm_errhandler_function(MPI_Comm *comm, int *error_code, ...); <br></tt>  
 <tt> typedef void MPI_Win_errhandler_function(MPI_Win *win, int *error_code, ...); <br></tt>  
 <tt> typedef void MPI_File_errhandler_function(MPI_File *file, int *error_code, ...); <br></tt>  
 <tt> typedef void MPI_Session_errhandler_function(MPI_Session *session, int *error_code, ...); <br></tt>  
<P> 
 <tt> typedef int MPI_Grequest_query_function(void *extra_state, MPI_Status *status); <br></tt>  
 <tt> typedef int MPI_Grequest_free_function(void *extra_state); <br></tt>  
 <tt> typedef int MPI_Grequest_cancel_function(void *extra_state, int complete); <br></tt>  
<P> 
 <tt> typedef int MPI_Datarep_extent_function(MPI_Datatype datatype, MPI_Aint *extent, void *extra_state); <br></tt>  
 <tt> typedef int MPI_Datarep_conversion_function(void *userbuf, MPI_Datatype datatype, int count, void *filebuf, MPI_Offset position, void *extra_state); <br></tt>  
 <tt> typedef int MPI_Datarep_conversion_function_c(void *userbuf, MPI_Datatype datatype, MPI_Count count, void *filebuf, MPI_Offset position, void *extra_state); <br></tt>  
<P> 
 <tt> typedef void MPI_T_event_cb_function(MPI_T_event_instance event_instance, MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, void *user_data); <br></tt>  
 <tt> typedef void MPI_T_event_free_cb_function(MPI_T_event_registration event_registration, MPI_T_cb_safety cb_safety, void *user_data); <br></tt>  
 <tt> typedef void MPI_T_event_dropped_cb_function(MPI_Count count, MPI_T_event_registration event_registration, int source_index, MPI_T_cb_safety cb_safety, void *user_data); <br></tt>  
<P> 

<P>
<hr>
<a href="node522.htm#Node522"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node522.htm#Node522"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node522.htm#Node524"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<b>Next: </b><a href="node522.htm#Node524"> Fortran 2008 Bindings with the <tt>mpi_f08</tt> Module</a>
<b>Previous: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<p>
<hr><h3><span id="Node524">21.1.3.2. Fortran 2008 Bindings with the mpi_f08 Module</span></h3>
<a href="node522.htm#Node523"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node522.htm#Node522"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node522.htm#Node525"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<b>Next: </b><a href="node522.htm#Node525"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Modulee</a>
<b>Previous: </b><a href="node522.htm#Node523"> C Bindings</a>
<p>
The callback prototypes when using the Fortran <tt>mpi_f08</tt> module are shown below:  
 <P> 
The user-function argument to <font face="sans-serif"> MPI_Op_create</font>  
and <font face="sans-serif"> MPI_Op_create_c</font> should be declared according to:  
 <P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_User_function(invec, inoutvec, len, datatype) <br><br>USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>TYPE(C_PTR), VALUE :: <span style="white-space:nowrap">invec</span>, <span style="white-space:nowrap">inoutvec</span> <br>INTEGER :: <span style="white-space:nowrap">len</span> <br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">datatype</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_User_function_c(invec, inoutvec, len, datatype) !(_c) <br><br>USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>TYPE(C_PTR), VALUE :: <span style="white-space:nowrap">invec</span>, <span style="white-space:nowrap">inoutvec</span> <br>INTEGER(KIND=MPI_COUNT_KIND) :: <span style="white-space:nowrap">len</span> <br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">datatype</span> <br></tt></tt>  
 <P> 
The copy and delete function arguments to <font face="sans-serif"> MPI_Comm_create_keyval</font> should be  
declared according to:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Comm_copy_attr_function(oldcomm, comm_keyval, extra_state, attribute_val_in, attribute_val_out, flag, ierror) <br><br>TYPE(MPI_Comm) :: <span style="white-space:nowrap">oldcomm</span> <br>INTEGER :: <span style="white-space:nowrap">comm_keyval</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span>, <span style="white-space:nowrap">attribute_val_in</span>, <span style="white-space:nowrap">attribute_val_out</span> <br>LOGICAL :: <span style="white-space:nowrap">flag</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Comm_delete_attr_function(comm, comm_keyval, attribute_val, extra_state, ierror) <br><br>TYPE(MPI_Comm) :: <span style="white-space:nowrap">comm</span> <br>INTEGER :: <span style="white-space:nowrap">comm_keyval</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">attribute_val</span>, <span style="white-space:nowrap">extra_state</span> <br></tt></tt>  
 <P> 
The copy and delete function arguments to <font face="sans-serif"> MPI_Win_create_keyval</font> should be  
declared according to:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Win_copy_attr_function(oldwin, win_keyval, extra_state, attribute_val_in, attribute_val_out, flag, ierror) <br><br>TYPE(MPI_Win) :: <span style="white-space:nowrap">oldwin</span> <br>INTEGER :: <span style="white-space:nowrap">win_keyval</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span>, <span style="white-space:nowrap">attribute_val_in</span>, <span style="white-space:nowrap">attribute_val_out</span> <br>LOGICAL :: <span style="white-space:nowrap">flag</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Win_delete_attr_function(win, win_keyval, attribute_val, extra_state, ierror) <br><br>TYPE(MPI_Win) :: <span style="white-space:nowrap">win</span> <br>INTEGER :: <span style="white-space:nowrap">win_keyval</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">attribute_val</span>, <span style="white-space:nowrap">extra_state</span> <br></tt></tt>  
<P> 
The copy and delete function arguments to <font face="sans-serif"> MPI_Type_create_keyval</font> should be  
declared according to:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Type_copy_attr_function(oldtype, type_keyval, extra_state, attribute_val_in, attribute_val_out, flag, ierror) <br><br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">oldtype</span> <br>INTEGER :: <span style="white-space:nowrap">type_keyval</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span>, <span style="white-space:nowrap">attribute_val_in</span>, <span style="white-space:nowrap">attribute_val_out</span> <br>LOGICAL :: <span style="white-space:nowrap">flag</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Type_delete_attr_function(datatype, type_keyval, attribute_val, extra_state, ierror) <br><br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">datatype</span> <br>INTEGER :: <span style="white-space:nowrap">type_keyval</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">attribute_val</span>, <span style="white-space:nowrap">extra_state</span> <br></tt></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_Comm_create_errhandler</font>  
should be declared like this:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Comm_errhandler_function(comm, error_code) <br><br>TYPE(MPI_Comm) :: <span style="white-space:nowrap">comm</span> <br>INTEGER :: <span style="white-space:nowrap">error_code</span> <br></tt></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_Win_create_errhandler</font>  
should be declared like this:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Win_errhandler_function(win, error_code) <br><br>TYPE(MPI_Win) :: <span style="white-space:nowrap">win</span> <br>INTEGER :: <span style="white-space:nowrap">error_code</span> <br></tt></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_File_create_errhandler</font>  
should be declared like this:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_File_errhandler_function(file, error_code) <br><br>TYPE(MPI_File) :: <span style="white-space:nowrap">file</span> <br>INTEGER :: <span style="white-space:nowrap">error_code</span> <br></tt></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_Session_create_errhandler</font>  
should be declared like this:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Session_errhandler_function(session, error_code) <br><br>TYPE(MPI_Session) :: <span style="white-space:nowrap">session</span> <br>INTEGER :: <span style="white-space:nowrap">error_code</span> <br></tt></tt>  
<P> 
The query, free, and cancel function arguments to <font face="sans-serif"> MPI_Grequest_start</font>  
should be declared according to:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Grequest_query_function(extra_state, status, ierror) <br><br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span> <br>TYPE(MPI_Status) :: <span style="white-space:nowrap">status</span> <br>INTEGER :: <span style="white-space:nowrap">ierror</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Grequest_free_function(extra_state, ierror) <br><br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span> <br>INTEGER :: <span style="white-space:nowrap">ierror</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Grequest_cancel_function(extra_state, complete, ierror) <br><br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span> <br>LOGICAL :: <span style="white-space:nowrap">complete</span> <br>INTEGER :: <span style="white-space:nowrap">ierror</span> <br></tt></tt>  
<P> 
The extent and conversion function arguments to <font face="sans-serif"> MPI_Register_datarep</font>  
and <font face="sans-serif"> MPI_Register_datarep_c</font> should be declared  according to:  
<P> 
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Datarep_extent_function(datatype, extent, extra_state, ierror) <br><br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">datatype</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extent</span>, <span style="white-space:nowrap">extra_state</span> <br>INTEGER :: <span style="white-space:nowrap">ierror</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Datarep_conversion_function(userbuf, datatype, count, filebuf, position, extra_state, ierror) <br><br>USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>TYPE(C_PTR), VALUE :: <span style="white-space:nowrap">userbuf</span>, <span style="white-space:nowrap">filebuf</span> <br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">datatype</span> <br>INTEGER :: <span style="white-space:nowrap">count</span>, <span style="white-space:nowrap">ierror</span> <br>INTEGER(KIND=MPI_OFFSET_KIND) :: <span style="white-space:nowrap">position</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span> <br></tt></tt>  
<tt> ABSTRACT INTERFACE<br>&nbsp;&nbsp;&nbsp; <tt> SUBROUTINE MPI_Datarep_conversion_function_c(userbuf, datatype, count, filebuf, position, extra_state, ierror) !(_c) <br><br>USE, INTRINSIC :: ISO_C_BINDING, ONLY : C_PTR <br>TYPE(C_PTR), VALUE :: <span style="white-space:nowrap">userbuf</span>, <span style="white-space:nowrap">filebuf</span> <br>TYPE(MPI_Datatype) :: <span style="white-space:nowrap">datatype</span> <br>INTEGER(KIND=MPI_COUNT_KIND) :: <span style="white-space:nowrap">count</span> <br>INTEGER(KIND=MPI_OFFSET_KIND) :: <span style="white-space:nowrap">position</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) :: <span style="white-space:nowrap">extra_state</span> <br>INTEGER :: <span style="white-space:nowrap">ierror</span> <br></tt></tt>  
<P> 

<P>
<hr>
<a href="node522.htm#Node523"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node522.htm#Node522"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node522.htm#Node525"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<b>Next: </b><a href="node522.htm#Node525"> Fortran Bindings with <tt>mpif.h</tt> or the <tt>mpi</tt> Modulee</a>
<b>Previous: </b><a href="node522.htm#Node523"> C Bindings</a>
<p>
<hr><h3><span id="Node525">21.1.3.3. Fortran Bindings with mpif.h or the mpi Modulee</span></h3>
<a href="node522.htm#Node524"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node522.htm#Node522"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node526.htm#Node526"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<b>Next: </b><a href="node526.htm#Node526"> Deprecated Prototype Definitions</a>
<b>Previous: </b><a href="node522.htm#Node524"> Fortran 2008 Bindings with the <tt>mpi_f08</tt> Module</a>
<p>
With  
the Fortran <tt>mpi</tt> module or (deprecated) <tt>mpif.h</tt>, here are examples of how each of the user-defined  
subroutines should be declared.  
<P> 
The user-function argument to <font face="sans-serif"> MPI_OP_CREATE</font> should be declared  
like this:  
<P> 
 <tt> SUBROUTINE USER_FUNCTION(INVEC, INOUTVEC, LEN, DATATYPE) <br><br>&lt;type&gt; <span style="white-space:nowrap">INVEC(LEN)</span>, <span style="white-space:nowrap">INOUTVEC(LEN)</span> <br>INTEGER <span style="white-space:nowrap">LEN</span>, <span style="white-space:nowrap">DATATYPE</span> <br></tt>  
<P> 
The copy and delete function arguments to <font face="sans-serif"> MPI_COMM_CREATE_KEYVAL</font> should be  
declared like these:  
<P> 
 <tt> SUBROUTINE COMM_COPY_ATTR_FUNCTION(OLDCOMM, COMM_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br><br>INTEGER <span style="white-space:nowrap">OLDCOMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span> <br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
 <tt> SUBROUTINE COMM_DELETE_ATTR_FUNCTION(COMM, COMM_KEYVAL, ATTRIBUTE_VAL, EXTRA_STATE, IERROR) <br><br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">COMM_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
<P> 
The copy and delete function arguments to <font face="sans-serif"> MPI_WIN_CREATE_KEYVAL</font> should be  
declared like these:  
<P> 
 <tt> SUBROUTINE WIN_COPY_ATTR_FUNCTION(OLDWIN, WIN_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br><br>INTEGER <span style="white-space:nowrap">OLDWIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span> <br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
 <tt> SUBROUTINE WIN_DELETE_ATTR_FUNCTION(WIN, WIN_KEYVAL, ATTRIBUTE_VAL, EXTRA_STATE, IERROR) <br><br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">WIN_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
<P> 
The copy and delete function arguments to <font face="sans-serif"> MPI_TYPE_CREATE_KEYVAL</font> should be  
declared like these:  
<P> 
 <tt> SUBROUTINE TYPE_COPY_ATTR_FUNCTION(OLDTYPE, TYPE_KEYVAL, EXTRA_STATE, ATTRIBUTE_VAL_IN, ATTRIBUTE_VAL_OUT, FLAG, IERROR) <br><br>INTEGER <span style="white-space:nowrap">OLDTYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_IN</span>, <span style="white-space:nowrap">ATTRIBUTE_VAL_OUT</span> <br>LOGICAL <span style="white-space:nowrap">FLAG</span> <br></tt>  
 <tt> SUBROUTINE TYPE_DELETE_ATTR_FUNCTION(DATATYPE, TYPE_KEYVAL, ATTRIBUTE_VAL, EXTRA_STATE, IERROR) <br><br>INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">TYPE_KEYVAL</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">ATTRIBUTE_VAL</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_COMM_CREATE_ERRHANDLER</font>  
should be declared like this:  
<P> 
 <tt> SUBROUTINE COMM_ERRHANDLER_FUNCTION(COMM, ERROR_CODE) <br><br>INTEGER <span style="white-space:nowrap">COMM</span>, <span style="white-space:nowrap">ERROR_CODE</span> <br></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_WIN_CREATE_ERRHANDLER</font>  
should be declared like this:  
<P> 
 <tt> SUBROUTINE WIN_ERRHANDLER_FUNCTION(WIN, ERROR_CODE) <br><br>INTEGER <span style="white-space:nowrap">WIN</span>, <span style="white-space:nowrap">ERROR_CODE</span> <br></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_FILE_CREATE_ERRHANDLER</font>  
should be declared like this:  
<P> 
 <tt> SUBROUTINE FILE_ERRHANDLER_FUNCTION(FILE, ERROR_CODE) <br><br>INTEGER <span style="white-space:nowrap">FILE</span>, <span style="white-space:nowrap">ERROR_CODE</span> <br></tt>  
<P> 
The handler-function argument to <font face="sans-serif"> MPI_SESSION_CREATE_ERRHANDLER</font>  
should be declared like this:  
<P> 
 <tt> SUBROUTINE SESSION_ERRHANDLER_FUNCTION(SESSION, ERROR_CODE) <br><br>INTEGER <span style="white-space:nowrap">SESSION</span>, <span style="white-space:nowrap">ERROR_CODE</span> <br></tt>  
<P> 
The query, free, and cancel function arguments to <font face="sans-serif"> MPI_GREQUEST_START</font>  
should be declared like these:  
<P> 
 <tt> SUBROUTINE GREQUEST_QUERY_FUNCTION(EXTRA_STATE, STATUS, IERROR) <br><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br>INTEGER <span style="white-space:nowrap">STATUS(MPI_STATUS_SIZE)</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
 <tt> SUBROUTINE GREQUEST_FREE_FUNCTION(EXTRA_STATE, IERROR) <br><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br>INTEGER <span style="white-space:nowrap">IERROR</span> <br></tt>  
 <tt> SUBROUTINE GREQUEST_CANCEL_FUNCTION(EXTRA_STATE, COMPLETE, IERROR) <br><br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br>LOGICAL <span style="white-space:nowrap">COMPLETE</span> <br>INTEGER <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
The extent and conversion function arguments to <font face="sans-serif"> MPI_REGISTER_DATAREP</font>  
should be declared like these:  
<P> 
 <tt> SUBROUTINE DATAREP_EXTENT_FUNCTION(DATATYPE, EXTENT, EXTRA_STATE, IERROR) <br><br>INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTENT</span>, <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
 <tt> SUBROUTINE DATAREP_CONVERSION_FUNCTION(USERBUF, DATATYPE, COUNT, FILEBUF, POSITION, EXTRA_STATE, IERROR) <br><br>&lt;TYPE&gt; <span style="white-space:nowrap">USERBUF(*)</span>, <span style="white-space:nowrap">FILEBUF(*)</span> <br>INTEGER <span style="white-space:nowrap">DATATYPE</span>, <span style="white-space:nowrap">COUNT</span>, <span style="white-space:nowrap">IERROR</span> <br>INTEGER(KIND=MPI_OFFSET_KIND) <span style="white-space:nowrap">POSITION</span> <br>INTEGER(KIND=MPI_ADDRESS_KIND) <span style="white-space:nowrap">EXTRA_STATE</span> <br></tt>  
 <P> 
<P> 
<P> 

<P>
<hr>
<a href="node522.htm#Node524"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node522.htm#Node522"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node526.htm#Node526"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node522.htm#Node522"> Prototype Definitions</a>
<b>Next: </b><a href="node526.htm#Node526"> Deprecated Prototype Definitions</a>
<b>Previous: </b><a href="node522.htm#Node524"> Fortran 2008 Bindings with the <tt>mpi_f08</tt> Module</a>
<p>
<HR>
Return to <A HREF="node601.htm">MPI-4.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-4.1 of November 2, 2023<BR>
HTML Generated on November 19, 2023
</FONT>
</body>
</html>
