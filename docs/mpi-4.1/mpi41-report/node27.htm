<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-terms/terms-2 -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi4-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi41-report-html.idx -basedef mpi4defs.txt -o mpi41-report.tex mpi-report.tex 
-->
<title>Procedure Specification</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h1><span id="Node27">3.3. Procedure Specification</span></h1>
<a href="node26.htm#Node26"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node24.htm#Node24"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node28.htm#Node28"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node24.htm#Node24"> <font face="sans-serif"> MPI</font> Terms and Conventions</a>
<b>Next: </b><a href="node28.htm#Node28"> Semantic Terms</a>
<b>Previous: </b><a href="node26.htm#Node26"> Naming Conventions</a>
<p>
  
  
  
<P> 
<font face="sans-serif"> MPI</font> procedures are specified using a language-independent notation.  
The arguments of procedure calls are marked as  IN,  OUT, or  
 INOUT.  The meanings of these are:  
<dl> 
 
<dt> 
<b> IN:</b><dd> 
  
  the call may use the input value but does not update the  
  argument from the perspective of the caller at any time during the call's execution,  
 
<dt> 
<b> OUT:</b><dd> 
  
  the call may update the argument but does not use its input value,  
 
<dt> 
<b> INOUT:</b><dd> 
  
  the call may both use and update the argument.  
</dl> 
<br> 
There is one special case---if an argument is a handle to  
an opaque object (these terms are defined in  
Section <a href="node33.htm#Node33">Opaque Objects</a>), and the  
object is updated by the procedure call, then the argument is marked  
 INOUT or  
 OUT.  It is marked this way even though the handle itself is not  
modified---we use the  
 INOUT or  
 OUT attribute to denote that what the  
handle <em> references</em> is updated.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
The definition of <font face="sans-serif"> MPI</font> tries to avoid, to the largest possible extent,  
the use of  INOUT arguments, because such use is error-prone,  
especially for scalar arguments.  
 (<em> End of rationale.</em>) <br> 
<font face="sans-serif"> MPI</font>'s use of  IN,  OUT, and  INOUT is intended  
to indicate to the user how an argument is  
to be used, but  
does not provide a rigorous classification that can be translated  
directly into  
all  
language bindings (e.g., <tt>INTENT</tt> in Fortran 90 bindings  
or <tt>const</tt> in C bindings). For instance, the ``constant''  
<font face="sans-serif"> MPI_BOTTOM</font> can usually be passed to  OUT buffer  
arguments. Similarly, <font face="sans-serif"> MPI_STATUS_IGNORE</font> can be passed as the  
 OUT status argument.  
<P> 
A common occurrence for <font face="sans-serif"> MPI</font> functions is an argument that is used as  
 IN  
by some processes and  OUT by other processes. Such  
an argument is, syntactically, an  INOUT argument and is marked as  
such, although, semantically, it is not used in one call both for  
input and for output on a single process.  
<P> 
Another frequent situation arises when an argument value is needed only by  
a subset of the processes.  When an argument is not significant at a  
process then an arbitrary value can be passed as an argument.  
<P> 
Unless specified otherwise, an argument of type  OUT or type  
 INOUT cannot be aliased with any other argument passed to an  
<font face="sans-serif"> MPI</font> procedure.  An example of argument aliasing in C appears below.  
If we define a C procedure like this,  
<P><img width=729 height=100 src="img0.gif" alt="Image file"><P>
then a call to it in the following code fragment has aliased arguments.  
<P><img width=729 height=50 src="img1.gif" alt="Image file"><P>
Although the C language allows this, such usage of <font face="sans-serif"> MPI</font> procedures is  
forbidden unless otherwise specified.  Note that Fortran prohibits  
aliasing of arguments.  
<P> 
All <font face="sans-serif"> MPI</font> functions are first specified in the language-independent  
notation.  Immediately below this, language dependent bindings follow:  
<ul> 
 
<li>The ISO C version(s) of the function.  
 
<li>The Fortran version(s) used with <tt>USE mpi_f08</tt>.  
 
<li>The Fortran version of the same  
      function used with <tt>USE mpi</tt> or (deprecated) <tt>INCLUDE 'mpif.h'</tt>.  
</ul> 
<br> 
Some <font face="sans-serif"> MPI</font> procedures have two interfaces for a given language support;  
see Sections <a href="node38.htm#Node38">Absolute Addresses and Relative Address Displacements</a> and <a href="node40.htm#Node40">Counts</a>.  
<P> 
An exception is Section <a href="node413.htm#Node413">The <font face="sans-serif"> MPI</font> Tool Information Interface</a> ``The <font face="sans-serif"> MPI</font> Tool Information Interface'',  
which only provides ISO C interfaces.  
<P> 
``Fortran'' in this document refers to Fortran 90 or later; see  
Section <a href="node41.htm#Node41">Language Binding</a>.  
<P> 
The words function, routine, procedure, procedure call, and call are often used as synonyms within this standard.  
<P> 

<P>
<hr>
<a href="node26.htm#Node26"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node24.htm#Node24"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node28.htm#Node28"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node24.htm#Node24"> <font face="sans-serif"> MPI</font> Terms and Conventions</a>
<b>Next: </b><a href="node28.htm#Node28"> Semantic Terms</a>
<b>Previous: </b><a href="node26.htm#Node26"> Naming Conventions</a>
<p>
<HR>
Return to <A HREF="node601.htm">MPI-4.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-4.1 of November 2, 2023<BR>
HTML Generated on November 19, 2023
</FONT>
</body>
</html>
