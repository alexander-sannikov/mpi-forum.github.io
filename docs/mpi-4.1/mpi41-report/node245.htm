<!DOCTYPE html>
<html lang=en>
<head>
<!-- This file was generated by tohtml from chap-inquiry/inquiry-rendered -->
<!-- with the command
tohtml -default -numbers -dosnl -htables -quietlatex -allgif -endpage mpi4-forum-tail.htm -Wnoredef --mpidoc --latexpgm pdflatex --indexfile mpi41-report-html.idx -basedef mpi4defs.txt -o mpi41-report.tex mpi-report.tex 
-->
<title>Environmental Inquiries</title>
</head>
<body style="background-color:#FFFFFF">
<hr><h2><span id="Node245">10.1.2. Environmental Inquiries</span></h2>
<a href="node244.htm#Node244"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node243.htm#Node243"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node246"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node243.htm#Node243"> Implementation Information</a>
<b>Next: </b><a href="node245.htm#Node246"> Tag Values</a>
<b>Previous: </b><a href="node244.htm#Node244"> Version Inquiries</a>
<p>
  
  
<P> 
When using the World Model (Section <a href="node266.htm#Node266">The World Model</a>),  
a set of attributes that describe the execution environment is attached to  
the communicator <font face="sans-serif"> MPI_COMM_WORLD</font> when <font face="sans-serif"> MPI</font> is initialized.  
The values of these attributes can be inquired by using the function  
<font face="sans-serif"> MPI_COMM_GET_ATTR</font>  
described in   
Section <a href="node204.htm#Node204">Caching</a> and in Section <a href="node514.htm#Node514">Attributes</a>.  
It is erroneous to delete these attributes,  
free their keys, or change their values.  
<P> 
The list of predefined attribute keys include  
<dl> 
 
<dt> 
<b><font face="sans-serif"> MPI_TAG_UB</font>:</b><dd> 
  Upper bound for tag value.  
 
<dt> 
<b><font face="sans-serif"> MPI_IO</font>:</b><dd> 
 Rank of a node that has regular I/O facilities (possibly  
myrank).  Nodes in the same communicator may return different values for this  
parameter.  
 
<dt> 
<b><font face="sans-serif"> MPI_WTIME_IS_GLOBAL</font>:</b><dd> 
 Boolean variable that indicates  
whether clocks are synchronized.  
</dl> 
<br> 
When using the Sessions Model (Section <a href="node271.htm#Node271">The Sessions Model</a>),  
only the <font face="sans-serif"> MPI_TAG_UB</font> attribute is available.  
Vendors may add implementation-specific parameters (such as node number,  
real memory size, virtual memory size, etc.)  
<P> 
These predefined attributes do not change value between <font face="sans-serif"> MPI</font>  
initialization (<font face="sans-serif"> MPI_INIT</font>) and <font face="sans-serif"> MPI</font> completion  
(<font face="sans-serif"> MPI_FINALIZE</font>), and cannot be updated or deleted by users.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Note that in the C binding, the value returned by these attributes is a   
<em> pointer</em> to an <tt> int</tt> containing the requested value.  
 (<em> End of advice to users.</em>) <br> 
The required parameter values are discussed in more detail below:  
<P> 
<ul> 
</ul> 

<P>
<hr>
<a href="node244.htm#Node244"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node243.htm#Node243"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node246"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node243.htm#Node243"> Implementation Information</a>
<b>Next: </b><a href="node245.htm#Node246"> Tag Values</a>
<b>Previous: </b><a href="node244.htm#Node244"> Version Inquiries</a>
<p>
<hr><h3><span id="Node246">10.1.2.1. Tag Values</span></h3>
<a href="node245.htm#Node245"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node247"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node247"> IO Rank</a>
<b>Previous: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<p>
  
Tag values range from <tt>0</tt> to the value returned for <font face="sans-serif"> MPI_TAG_UB</font>,  
inclusive.  
These values are guaranteed to be unchanging during the execution of an <font face="sans-serif"> MPI</font>  
program.  
In addition, the tag upper bound value must be <em> at least</em> 32767.  
An <font face="sans-serif"> MPI</font> implementation is free to make the value of <font face="sans-serif"> MPI_TAG_UB</font> larger  
than this;  
for example, the value <i>2<SUP>30</SUP>-1</i> is also a valid value for  
<font face="sans-serif"> MPI_TAG_UB</font>.  
<P> 
In the Sessions Model, the attribute <font face="sans-serif"> MPI_TAG_UB</font> is attached to  
all communicators created by <font face="sans-serif"> MPI_COMM_CREATE_FROM_GROUP</font> and  
<font face="sans-serif"> MPI_INTERCOMM_CREATE_FROM_GROUPS</font>,  
with the same value on all <font face="sans-serif"> MPI</font> processes in the communicator.  
In the World Model,  
the attribute <font face="sans-serif"> MPI_TAG_UB</font> has the same value on all processes  
of <font face="sans-serif"> MPI_COMM_WORLD</font>.  
<P> 

<P>
<hr>
<a href="node245.htm#Node245"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node247"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node247"> IO Rank</a>
<b>Previous: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<p>
<hr><h3><span id="Node247">10.1.2.2. IO Rank</span></h3>
<a href="node245.htm#Node246"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node248"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node248"> Clock Synchronization</a>
<b>Previous: </b><a href="node245.htm#Node246"> Tag Values</a>
<p>
  
The value returned for <font face="sans-serif"> MPI_IO</font> is the rank of a processor that can  
provide language-standard I/O facilities.  For Fortran, this means that all of  
the Fortran I/O operations are supported (e.g., <tt>OPEN</tt>, <tt>REWIND</tt>,  
<tt>WRITE</tt>).  For C,   
this means that all of the   
ISO C  
I/O operations are  
supported (e.g., <tt>fopen</tt>, <tt>fprintf</tt>, <tt>lseek</tt>).  
<P> 
If every process can provide language-standard I/O, then the value  
<font face="sans-serif"> MPI_ANY_SOURCE</font> will be returned.  Otherwise, if the calling  
process can provide language-standard I/O, then its rank will be  
returned.  Otherwise, if some process can provide language-standard  
I/O then the rank of one such process will be returned. The same value  
need not be returned by all processes.  
If no process can provide  
language-standard I/O, then the value  
<font face="sans-serif"> MPI_PROC_NULL</font> will bereturned.  
<P> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Note that input is not collective, and this attribute does <em> not</em> indicate  
which process can or does provide input.  
 (<em> End of advice to users.</em>) <br> 

<P>
<hr>
<a href="node245.htm#Node246"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node248"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node248"> Clock Synchronization</a>
<b>Previous: </b><a href="node245.htm#Node246"> Tag Values</a>
<p>
<hr><h3><span id="Node248">10.1.2.3. Clock Synchronization</span></h3>
<a href="node245.htm#Node247"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node249"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node249"> Inquire Processor Name</a>
<b>Previous: </b><a href="node245.htm#Node247"> IO Rank</a>
<p>
  
  
<P> 
The value returned for <font face="sans-serif"> MPI_WTIME_IS_GLOBAL</font> is 1 if clocks  
at all processes in<font face="sans-serif"> MPI_COMM_WORLD</font> are synchronized, 0  
otherwise.  A collection of clocks is considered synchronized if  
explicit effort has been taken to synchronize them.  The  
expectation is that the variation in time, as measured by calls  
to <font face="sans-serif"> MPI_WTIME</font>, will be less then one half the round-trip  
time for an <font face="sans-serif"> MPI</font> message of length zero.  If time is measured at a  
process just before a send and at another process just after a matching  
receive, the second time should be always higher than the first one.  
<P> 
The attribute <font face="sans-serif"> MPI_WTIME_IS_GLOBAL</font> need not be present when  
the clocks are not synchronized (however, the attribute key  
<font face="sans-serif"> MPI_WTIME_IS_GLOBAL</font> is always valid).  
This attribute  
may be associated with communicators other then <font face="sans-serif"> MPI_COMM_WORLD</font>.  
<P> 
The attribute <font face="sans-serif"> MPI_WTIME_IS_GLOBAL</font> has the same value on all  
processes of <font face="sans-serif"> MPI_COMM_WORLD</font>.  
<P> 

<P>
<hr>
<a href="node245.htm#Node247"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node249"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node249"> Inquire Processor Name</a>
<b>Previous: </b><a href="node245.htm#Node247"> IO Rank</a>
<p>
<hr><h3><span id="Node249">10.1.2.4. Inquire Processor Name</span></h3>
<a href="node245.htm#Node248"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node250"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node250"> Inquire Hardware Resource Information</a>
<b>Previous: </b><a href="node245.htm#Node248"> Clock Synchronization</a>
<p>
  
<TABLE><TR><TD COLSPAN=2>MPI_GET_PROCESSOR_NAME(<span style="white-space:nowrap">name</span>, <span style="white-space:nowrap">resultlen</span>)</TD></TR>  
<TR><TD> OUT name</TD><TD>A unique specifier for the actual (as opposed to virtual) node.</TD></TR>  
<TR><TD> OUT resultlen</TD><TD>Length (in printable characters) of the result returned in <font face="sans-serif"> name</font></TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Get_processor_name(char *name, int *resultlen) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Get_processor_name(name, resultlen, ierror) <br><br>CHARACTER(LEN=MPI_MAX_PROCESSOR_NAME), INTENT(OUT) :: <span style="white-space:nowrap">name</span> <br>INTEGER, INTENT(OUT) :: <span style="white-space:nowrap">resultlen</span> <br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_GET_PROCESSOR_NAME(NAME, RESULTLEN, IERROR) <br><br>CHARACTER*(*) <span style="white-space:nowrap">NAME</span> <br>INTEGER <span style="white-space:nowrap">RESULTLEN</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
This routine returns the name of the processor on which it was called at the  
moment of the call.  
The name is a character string for maximum flexibility.  From  
this value it must be possible to identify a specific piece of hardware;  
possible values include ``processor 9 in rack 4 of mpp.cs.org'' and ``231''  
(where 231 is the actual processor number in the running homogeneous system).  
The argument <font face="sans-serif"> name</font> must represent storage that is at least  
<font face="sans-serif"> MPI_MAX_PROCESSOR_NAME</font> characters long.  
<font face="sans-serif"> MPI_GET_PROCESSOR_NAME</font> may write up to this many characters into  
<font face="sans-serif"> name</font>.  
<P> 
The number of characters actually written  
is returned in the output argument, <font face="sans-serif"> resultlen</font>.  
In C, a null character is additionally stored at <font face="sans-serif"> name[resultlen]</font>.  
The value of <font face="sans-serif"> resultlen</font> cannot be larger than <font face="sans-serif"> MPI_MAX_PROCESSOR_NAME</font>-1.  
In Fortran, <font face="sans-serif"> name</font> is padded on the right with blank characters.  
The value of <font face="sans-serif"> resultlen</font> cannot be larger than <font face="sans-serif"> MPI_MAX_PROCESSOR_NAME</font>.  
<P> 
 
<br> 
<em> Rationale.</em>  
<P> 
This function allows <font face="sans-serif"> MPI</font> implementations that do process  
migration to return the current processor.  Note that nothing in <font face="sans-serif"> MPI</font>   
<em> requires</em> or defines process migration; this definition of  
<font face="sans-serif"> MPI_GET_PROCESSOR_NAME</font> simply allows such an implementation.  
 (<em> End of rationale.</em>) <br> 
 
<br> 
<em> Advice to users.</em>  
<P> 
The user must provide at least <font face="sans-serif"> MPI_MAX_PROCESSOR_NAME</font> space  
to write the processor name---processor names can be this long.  The user  
should examine the   
output   
argument, <font face="sans-serif"> resultlen</font>, to determine  
the actual length of the name.  
 (<em> End of advice to users.</em>) <br> 

<P>
<hr>
<a href="node245.htm#Node248"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node245.htm#Node250"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node245.htm#Node250"> Inquire Hardware Resource Information</a>
<b>Previous: </b><a href="node245.htm#Node248"> Clock Synchronization</a>
<p>
<hr><h3><span id="Node250">10.1.2.5. Inquire Hardware Resource Information</span></h3>
<a href="node245.htm#Node249"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node251.htm#Node251"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node251.htm#Node251"> Memory Allocation</a>
<b>Previous: </b><a href="node245.htm#Node249"> Inquire Processor Name</a>
<p>
  
    <P> 
<TABLE><TR><TD COLSPAN=2>MPI_GET_HW_RESOURCE_INFO(<span style="white-space:nowrap">hw_info</span>)</TD></TR>  
<TR><TD> OUT hw_info</TD><TD>info object created (handle)</TD></TR>  
</TABLE>  
  <b> C binding</b><br>  <tt> int MPI_Get_hw_resource_info(MPI_Info *hw_info) <br></tt>  
  <b> Fortran 2008 binding</b><br>  <tt> MPI_Get_hw_resource_info(hw_info, ierror) <br><br>TYPE(MPI_Info), INTENT(OUT) :: <span style="white-space:nowrap">hw_info</span> <br>INTEGER, OPTIONAL, INTENT(OUT) :: <span style="white-space:nowrap">ierror</span> <br></tt>  
  <b> Fortran binding</b><br>  <tt> MPI_GET_HW_RESOURCE_INFO(HW_INFO, IERROR) <br><br>INTEGER <span style="white-space:nowrap">HW_INFO</span>, <span style="white-space:nowrap">IERROR</span> <br></tt>  
<P> 
<font face="sans-serif"> MPI_GET_HW_RESOURCE_INFO</font> is a local procedure that returns an info object containing  
information pertaining to the hardware platform on which the calling <font face="sans-serif"> MPI</font> process is executing at the  
moment of the call. This information is stored as (<font face="sans-serif"> key</font>,<font face="sans-serif"> value</font>)  pairs where each key   
is the name of a hardware resource type and its value is set to <font face="sans-serif"> true</font> if the calling <font face="sans-serif"> MPI</font> process  
is restricted to a single instance of a hardware resource of that type and <font face="sans-serif"> false</font> otherwise.  
The order in which the keys are stored in  <font face="sans-serif"> hw_info</font> is unspecified.  
This procedure will return different information for <font face="sans-serif"> MPI</font> processes that are restricted to  
different hardware resources. Otherwise, info objects with identical (<font face="sans-serif"> key</font>, <font face="sans-serif"> value</font>) pairs are returned.  
The user is responsible for freeing <font face="sans-serif"> hw_info</font> via <font face="sans-serif"> MPI_INFO_FREE</font>.  
<P> 
The keys stored in the <font face="sans-serif"> hw_info</font> object have a <em> Uniform Resource Identifier</em> (URI) format.  
The first part of the URI indicates the key provider and the second part conforms to the format used by  
this key provider. The key provider <font face="sans-serif"> </font><tt>"</tt>mpi://<tt>"</tt></font> is reserved for exclusive use by the <font face="sans-serif"> MPI</font> standard.  
<P> 
 
<br> 
<em> Advice  
        to implementors.</em>  
<P> 
Key provider names could be derived from <font face="sans-serif"> MPI</font> implementation names (e.g., <font face="sans-serif"> </font><tt>"</tt>mpich://<tt>"</tt></font>, <font face="sans-serif"> </font><tt>"</tt>openmpi://<tt>"</tt></font>),  
  from names of external libraries or pieces of software (e.g., <font face="sans-serif"> </font><tt>"</tt>hwloc://<tt>"</tt></font>, <font face="sans-serif"> </font><tt>"</tt>pmix://<tt>"</tt></font>), from names  
  of programming or execution models (e.g., <font face="sans-serif"> </font><tt>"</tt>openmp://<tt>"</tt></font>), from resource manager names (e.g., <font face="sans-serif"> </font><tt>"</tt>slurm://<tt>"</tt></font>)  
  or from hardware vendor names.  
 (<em> End of advice to implementors.</em>) <br> 
 
<br> 
<em> Advice to users.</em>  
<P> 
Users should be cautious when using such keys as comparisons between different providers may not be always  
  meaningful nor relevant.  
 (<em> End of advice to users.</em>) <br> 
 
<br> 
<em> Advice to users.</em>  
  <P> 
The keys stored in the info object returned by this procedure can be used in  
  <font face="sans-serif"> MPI_COMM_SPLIT_TYPE</font> with the  <font face="sans-serif"> split_type</font> value  <font face="sans-serif"> MPI_COMM_TYPE_HW_GUIDED</font>  
  or <font face="sans-serif"> MPI_COMM_TYPE_RESOURCE_GUIDED</font> as key <em> values</em> for the info key <font face="sans-serif"> mpi_hw_resource_type</font>.  
 (<em> End of advice to users.</em>) <br> 
Subsequent calls to <font face="sans-serif"> MPI_GET_HW_RESOURCE_INFO</font> may return different information throughout the execution  
of the program because an <font face="sans-serif"> MPI</font> process can be relocated (e.g., migrated or have its hardware restrictions changed).  
<P> 

<P>
<hr>
<a href="node245.htm#Node249"><img width=16 height=16 src="previous.gif" alt="Previous"></a><a href="node245.htm#Node245"><img width=16 height=16 src="up.gif" alt="Up"></a><a href="node251.htm#Node251"><img width=16 height=16 src="next.gif" alt="Next"></a><br>
<b>Up: </b><a href="node245.htm#Node245"> Environmental Inquiries</a>
<b>Next: </b><a href="node251.htm#Node251"> Memory Allocation</a>
<b>Previous: </b><a href="node245.htm#Node249"> Inquire Processor Name</a>
<p>
<HR>
Return to <A HREF="node601.htm">MPI-4.1 Standard Index</A><BR>
Return to <A HREF="http://www.mpi-forum.org/index.html">MPI Forum Home Page</A><BR>
<HR>
<FONT SIZE=-1>(Unofficial) MPI-4.1 of November 2, 2023<BR>
HTML Generated on November 19, 2023
</FONT>
</body>
</html>
